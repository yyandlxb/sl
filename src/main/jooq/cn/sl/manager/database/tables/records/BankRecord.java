/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables.records;


import cn.sl.manager.database.tables.Bank;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BankRecord extends UpdatableRecordImpl<BankRecord> implements Record6<Integer, String, String, Integer, String, LocalDateTime> {

    private static final long serialVersionUID = -1497418610;

    /**
     * Setter for <code>sl.bank.id</code>.
     */
    public BankRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sl.bank.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sl.bank.name</code>.
     */
    public BankRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sl.bank.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sl.bank.code</code>.
     */
    public BankRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sl.bank.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sl.bank.user_id</code>.
     */
    public BankRecord setUserId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sl.bank.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sl.bank.user_name</code>.
     */
    public BankRecord setUserName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sl.bank.user_name</code>.
     */
    public String getUserName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sl.bank.create_at</code>.
     */
    public BankRecord setCreateAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sl.bank.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Integer, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, Integer, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Bank.BANK.ID;
    }

    @Override
    public Field<String> field2() {
        return Bank.BANK.NAME;
    }

    @Override
    public Field<String> field3() {
        return Bank.BANK.CODE;
    }

    @Override
    public Field<Integer> field4() {
        return Bank.BANK.USER_ID;
    }

    @Override
    public Field<String> field5() {
        return Bank.BANK.USER_NAME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Bank.BANK.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public Integer component4() {
        return getUserId();
    }

    @Override
    public String component5() {
        return getUserName();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public Integer value4() {
        return getUserId();
    }

    @Override
    public String value5() {
        return getUserName();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateAt();
    }

    @Override
    public BankRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BankRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BankRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public BankRecord value4(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public BankRecord value5(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public BankRecord value6(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public BankRecord values(Integer value1, String value2, String value3, Integer value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BankRecord
     */
    public BankRecord() {
        super(Bank.BANK);
    }

    /**
     * Create a detached, initialised BankRecord
     */
    public BankRecord(Integer id, String name, String code, Integer userId, String userName, LocalDateTime createAt) {
        super(Bank.BANK);

        set(0, id);
        set(1, name);
        set(2, code);
        set(3, userId);
        set(4, userName);
        set(5, createAt);
    }
}
