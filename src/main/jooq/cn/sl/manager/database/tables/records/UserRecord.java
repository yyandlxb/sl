/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables.records;


import cn.sl.manager.database.tables.User;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record10<Integer, String, String, LocalDateTime, LocalDateTime, Byte, String, String, Boolean, BigDecimal> {

    private static final long serialVersionUID = 1833892593;

    /**
     * Setter for <code>sl.user.id</code>.
     */
    public UserRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sl.user.phone</code>.
     */
    public UserRecord setPhone(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.phone</code>.
     */
    public String getPhone() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sl.user.name</code>.
     */
    public UserRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sl.user.create_at</code>.
     */
    public UserRecord setCreateAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>sl.user.update_at</code>.
     */
    public UserRecord setUpdateAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>sl.user.type</code>.
     */
    public UserRecord setType(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.type</code>.
     */
    public Byte getType() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>sl.user.password</code>.
     */
    public UserRecord setPassword(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.password</code>.
     */
    public String getPassword() {
        return (String) get(6);
    }

    /**
     * Setter for <code>sl.user.open_id</code>.
     */
    public UserRecord setOpenId(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.open_id</code>.
     */
    public String getOpenId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>sl.user.deleted</code>.
     */
    public UserRecord setDeleted(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>sl.user.account_fee</code>.
     */
    public UserRecord setAccountFee(BigDecimal value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>sl.user.account_fee</code>.
     */
    public BigDecimal getAccountFee() {
        return (BigDecimal) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, String, String, LocalDateTime, LocalDateTime, Byte, String, String, Boolean, BigDecimal> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, String, String, LocalDateTime, LocalDateTime, Byte, String, String, Boolean, BigDecimal> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.PHONE;
    }

    @Override
    public Field<String> field3() {
        return User.USER.NAME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return User.USER.CREATE_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return User.USER.UPDATE_AT;
    }

    @Override
    public Field<Byte> field6() {
        return User.USER.TYPE;
    }

    @Override
    public Field<String> field7() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<String> field8() {
        return User.USER.OPEN_ID;
    }

    @Override
    public Field<Boolean> field9() {
        return User.USER.DELETED;
    }

    @Override
    public Field<BigDecimal> field10() {
        return User.USER.ACCOUNT_FEE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPhone();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateAt();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateAt();
    }

    @Override
    public Byte component6() {
        return getType();
    }

    @Override
    public String component7() {
        return getPassword();
    }

    @Override
    public String component8() {
        return getOpenId();
    }

    @Override
    public Boolean component9() {
        return getDeleted();
    }

    @Override
    public BigDecimal component10() {
        return getAccountFee();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPhone();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateAt();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateAt();
    }

    @Override
    public Byte value6() {
        return getType();
    }

    @Override
    public String value7() {
        return getPassword();
    }

    @Override
    public String value8() {
        return getOpenId();
    }

    @Override
    public Boolean value9() {
        return getDeleted();
    }

    @Override
    public BigDecimal value10() {
        return getAccountFee();
    }

    @Override
    public UserRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setPhone(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public UserRecord value4(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public UserRecord value5(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public UserRecord value6(Byte value) {
        setType(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setOpenId(value);
        return this;
    }

    @Override
    public UserRecord value9(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public UserRecord value10(BigDecimal value) {
        setAccountFee(value);
        return this;
    }

    @Override
    public UserRecord values(Integer value1, String value2, String value3, LocalDateTime value4, LocalDateTime value5, Byte value6, String value7, String value8, Boolean value9, BigDecimal value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Integer id, String phone, String name, LocalDateTime createAt, LocalDateTime updateAt, Byte type, String password, String openId, Boolean deleted, BigDecimal accountFee) {
        super(User.USER);

        set(0, id);
        set(1, phone);
        set(2, name);
        set(3, createAt);
        set(4, updateAt);
        set(5, type);
        set(6, password);
        set(7, openId);
        set(8, deleted);
        set(9, accountFee);
    }
}
