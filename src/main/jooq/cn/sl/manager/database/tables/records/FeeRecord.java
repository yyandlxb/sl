/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables.records;


import cn.sl.manager.database.tables.Fee;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FeeRecord extends TableRecordImpl<FeeRecord> implements Record2<BigDecimal, String> {

    private static final long serialVersionUID = 1422972438;

    /**
     * Setter for <code>sl.fee.fee</code>.
     */
    public FeeRecord setFee(BigDecimal value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sl.fee.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>sl.fee.code</code>.
     */
    public FeeRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sl.fee.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<BigDecimal, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<BigDecimal, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return Fee.FEE.FEE_;
    }

    @Override
    public Field<String> field2() {
        return Fee.FEE.CODE;
    }

    @Override
    public BigDecimal component1() {
        return getFee();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public BigDecimal value1() {
        return getFee();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public FeeRecord value1(BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    public FeeRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public FeeRecord values(BigDecimal value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FeeRecord
     */
    public FeeRecord() {
        super(Fee.FEE);
    }

    /**
     * Create a detached, initialised FeeRecord
     */
    public FeeRecord(BigDecimal fee, String code) {
        super(Fee.FEE);

        set(0, fee);
        set(1, code);
    }
}
