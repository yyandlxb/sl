/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables.records;


import cn.sl.manager.database.tables.Berth;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BerthRecord extends UpdatableRecordImpl<BerthRecord> implements Record4<Integer, String, LocalDateTime, Boolean> {

    private static final long serialVersionUID = -42827748;

    /**
     * Setter for <code>sl.berth.id</code>.
     */
    public BerthRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sl.berth.name</code>.
     */
    public BerthRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>sl.berth.created_at</code>.
     */
    public BerthRecord setCreatedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>sl.berth.deleted</code>.
     */
    public BerthRecord setDeleted(Boolean value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, LocalDateTime, Boolean> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, LocalDateTime, Boolean> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Berth.BERTH.ID;
    }

    @Override
    public Field<String> field2() {
        return Berth.BERTH.NAME;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Berth.BERTH.CREATED_AT;
    }

    @Override
    public Field<Boolean> field4() {
        return Berth.BERTH.DELETED;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public Boolean component4() {
        return getDeleted();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public Boolean value4() {
        return getDeleted();
    }

    @Override
    public BerthRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BerthRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BerthRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BerthRecord value4(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public BerthRecord values(Integer value1, String value2, LocalDateTime value3, Boolean value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BerthRecord
     */
    public BerthRecord() {
        super(Berth.BERTH);
    }

    /**
     * Create a detached, initialised BerthRecord
     */
    public BerthRecord(Integer id, String name, LocalDateTime createdAt, Boolean deleted) {
        super(Berth.BERTH);

        set(0, id);
        set(1, name);
        set(2, createdAt);
        set(3, deleted);
    }
}
