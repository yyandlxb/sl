/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables;


import cn.sl.manager.database.Keys;
import cn.sl.manager.database.Sl;
import cn.sl.manager.database.tables.records.MotorcadeRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Motorcade extends TableImpl<MotorcadeRecord> {

    private static final long serialVersionUID = 1280572107;

    /**
     * The reference instance of <code>sl.motorcade</code>
     */
    public static final Motorcade MOTORCADE = new Motorcade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MotorcadeRecord> getRecordType() {
        return MotorcadeRecord.class;
    }

    /**
     * The column <code>sl.motorcade.id</code>.
     */
    public final TableField<MotorcadeRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>sl.motorcade.name</code>.
     */
    public final TableField<MotorcadeRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>sl.motorcade.deleted</code>.
     */
    public final TableField<MotorcadeRecord, Boolean> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "");

    /**
     * The column <code>sl.motorcade.created_at</code>.
     */
    public final TableField<MotorcadeRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>sl.motorcade.updated_at</code>.
     */
    public final TableField<MotorcadeRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>sl.motorcade</code> table reference
     */
    public Motorcade() {
        this(DSL.name("motorcade"), null);
    }

    /**
     * Create an aliased <code>sl.motorcade</code> table reference
     */
    public Motorcade(String alias) {
        this(DSL.name(alias), MOTORCADE);
    }

    /**
     * Create an aliased <code>sl.motorcade</code> table reference
     */
    public Motorcade(Name alias) {
        this(alias, MOTORCADE);
    }

    private Motorcade(Name alias, Table<MotorcadeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Motorcade(Name alias, Table<MotorcadeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Motorcade(Table<O> child, ForeignKey<O, MotorcadeRecord> key) {
        super(child, key, MOTORCADE);
    }

    @Override
    public Schema getSchema() {
        return Sl.SL;
    }

    @Override
    public Identity<MotorcadeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MOTORCADE;
    }

    @Override
    public UniqueKey<MotorcadeRecord> getPrimaryKey() {
        return Keys.KEY_MOTORCADE_PRIMARY;
    }

    @Override
    public List<UniqueKey<MotorcadeRecord>> getKeys() {
        return Arrays.<UniqueKey<MotorcadeRecord>>asList(Keys.KEY_MOTORCADE_PRIMARY);
    }

    @Override
    public Motorcade as(String alias) {
        return new Motorcade(DSL.name(alias), this);
    }

    @Override
    public Motorcade as(Name alias) {
        return new Motorcade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Motorcade rename(String name) {
        return new Motorcade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Motorcade rename(Name name) {
        return new Motorcade(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
