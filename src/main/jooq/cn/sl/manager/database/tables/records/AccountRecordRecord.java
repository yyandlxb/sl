/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables.records;


import cn.sl.manager.database.tables.AccountRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountRecordRecord extends UpdatableRecordImpl<AccountRecordRecord> implements Record5<Integer, Integer, BigDecimal, LocalDateTime, String> {

    private static final long serialVersionUID = 1433625960;

    /**
     * Setter for <code>sl.account_record.id</code>.
     */
    public AccountRecordRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sl.account_record.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sl.account_record.user_id</code>.
     */
    public AccountRecordRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sl.account_record.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sl.account_record.fee</code>.
     */
    public AccountRecordRecord setFee(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sl.account_record.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>sl.account_record.created_at</code>.
     */
    public AccountRecordRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sl.account_record.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>sl.account_record.remark</code>.
     */
    public AccountRecordRecord setRemark(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sl.account_record.remark</code>.
     */
    public String getRemark() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, BigDecimal, LocalDateTime, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, BigDecimal, LocalDateTime, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AccountRecord.ACCOUNT_RECORD.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AccountRecord.ACCOUNT_RECORD.USER_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return AccountRecord.ACCOUNT_RECORD.FEE;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return AccountRecord.ACCOUNT_RECORD.CREATED_AT;
    }

    @Override
    public Field<String> field5() {
        return AccountRecord.ACCOUNT_RECORD.REMARK;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public BigDecimal component3() {
        return getFee();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public String component5() {
        return getRemark();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public BigDecimal value3() {
        return getFee();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public String value5() {
        return getRemark();
    }

    @Override
    public AccountRecordRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AccountRecordRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public AccountRecordRecord value3(BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    public AccountRecordRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public AccountRecordRecord value5(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public AccountRecordRecord values(Integer value1, Integer value2, BigDecimal value3, LocalDateTime value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountRecordRecord
     */
    public AccountRecordRecord() {
        super(AccountRecord.ACCOUNT_RECORD);
    }

    /**
     * Create a detached, initialised AccountRecordRecord
     */
    public AccountRecordRecord(Integer id, Integer userId, BigDecimal fee, LocalDateTime createdAt, String remark) {
        super(AccountRecord.ACCOUNT_RECORD);

        set(0, id);
        set(1, userId);
        set(2, fee);
        set(3, createdAt);
        set(4, remark);
    }
}
