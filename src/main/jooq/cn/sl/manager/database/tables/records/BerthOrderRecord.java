/*
 * This file is generated by jOOQ.
 */
package cn.sl.manager.database.tables.records;


import cn.sl.manager.database.tables.BerthOrder;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BerthOrderRecord extends UpdatableRecordImpl<BerthOrderRecord> implements Record11<Integer, Integer, LocalDateTime, Byte, LocalDateTime, LocalDateTime, BigDecimal, Integer, BigDecimal, Byte, LocalDateTime> {

    private static final long serialVersionUID = 356958615;

    /**
     * Setter for <code>sl.berth_order.id</code>.
     */
    public BerthOrderRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sl.berth_order.berth_id</code>.
     */
    public BerthOrderRecord setBerthId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.berth_id</code>.
     */
    public Integer getBerthId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sl.berth_order.start_at</code>.
     */
    public BerthOrderRecord setStartAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.start_at</code>.
     */
    public LocalDateTime getStartAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>sl.berth_order.status</code>.
     */
    public BerthOrderRecord setStatus(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>sl.berth_order.end_at</code>.
     */
    public BerthOrderRecord setEndAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.end_at</code>.
     */
    public LocalDateTime getEndAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>sl.berth_order.created_at</code>.
     */
    public BerthOrderRecord setCreatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>sl.berth_order.fee</code>.
     */
    public BerthOrderRecord setFee(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.fee</code>.
     */
    public BigDecimal getFee() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>sl.berth_order.user_id</code>.
     */
    public BerthOrderRecord setUserId(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>sl.berth_order.practical_fee</code>.
     */
    public BerthOrderRecord setPracticalFee(BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.practical_fee</code>.
     */
    public BigDecimal getPracticalFee() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>sl.berth_order.accounts_type</code>. 0-完成结算
     */
    public BerthOrderRecord setAccountsType(Byte value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.accounts_type</code>. 0-完成结算
     */
    public Byte getAccountsType() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>sl.berth_order.leave_at</code>.
     */
    public BerthOrderRecord setLeaveAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>sl.berth_order.leave_at</code>.
     */
    public LocalDateTime getLeaveAt() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, LocalDateTime, Byte, LocalDateTime, LocalDateTime, BigDecimal, Integer, BigDecimal, Byte, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, Integer, LocalDateTime, Byte, LocalDateTime, LocalDateTime, BigDecimal, Integer, BigDecimal, Byte, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return BerthOrder.BERTH_ORDER.ID;
    }

    @Override
    public Field<Integer> field2() {
        return BerthOrder.BERTH_ORDER.BERTH_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return BerthOrder.BERTH_ORDER.START_AT;
    }

    @Override
    public Field<Byte> field4() {
        return BerthOrder.BERTH_ORDER.STATUS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return BerthOrder.BERTH_ORDER.END_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return BerthOrder.BERTH_ORDER.CREATED_AT;
    }

    @Override
    public Field<BigDecimal> field7() {
        return BerthOrder.BERTH_ORDER.FEE;
    }

    @Override
    public Field<Integer> field8() {
        return BerthOrder.BERTH_ORDER.USER_ID;
    }

    @Override
    public Field<BigDecimal> field9() {
        return BerthOrder.BERTH_ORDER.PRACTICAL_FEE;
    }

    @Override
    public Field<Byte> field10() {
        return BerthOrder.BERTH_ORDER.ACCOUNTS_TYPE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return BerthOrder.BERTH_ORDER.LEAVE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getBerthId();
    }

    @Override
    public LocalDateTime component3() {
        return getStartAt();
    }

    @Override
    public Byte component4() {
        return getStatus();
    }

    @Override
    public LocalDateTime component5() {
        return getEndAt();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public BigDecimal component7() {
        return getFee();
    }

    @Override
    public Integer component8() {
        return getUserId();
    }

    @Override
    public BigDecimal component9() {
        return getPracticalFee();
    }

    @Override
    public Byte component10() {
        return getAccountsType();
    }

    @Override
    public LocalDateTime component11() {
        return getLeaveAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getBerthId();
    }

    @Override
    public LocalDateTime value3() {
        return getStartAt();
    }

    @Override
    public Byte value4() {
        return getStatus();
    }

    @Override
    public LocalDateTime value5() {
        return getEndAt();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public BigDecimal value7() {
        return getFee();
    }

    @Override
    public Integer value8() {
        return getUserId();
    }

    @Override
    public BigDecimal value9() {
        return getPracticalFee();
    }

    @Override
    public Byte value10() {
        return getAccountsType();
    }

    @Override
    public LocalDateTime value11() {
        return getLeaveAt();
    }

    @Override
    public BerthOrderRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public BerthOrderRecord value2(Integer value) {
        setBerthId(value);
        return this;
    }

    @Override
    public BerthOrderRecord value3(LocalDateTime value) {
        setStartAt(value);
        return this;
    }

    @Override
    public BerthOrderRecord value4(Byte value) {
        setStatus(value);
        return this;
    }

    @Override
    public BerthOrderRecord value5(LocalDateTime value) {
        setEndAt(value);
        return this;
    }

    @Override
    public BerthOrderRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public BerthOrderRecord value7(BigDecimal value) {
        setFee(value);
        return this;
    }

    @Override
    public BerthOrderRecord value8(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public BerthOrderRecord value9(BigDecimal value) {
        setPracticalFee(value);
        return this;
    }

    @Override
    public BerthOrderRecord value10(Byte value) {
        setAccountsType(value);
        return this;
    }

    @Override
    public BerthOrderRecord value11(LocalDateTime value) {
        setLeaveAt(value);
        return this;
    }

    @Override
    public BerthOrderRecord values(Integer value1, Integer value2, LocalDateTime value3, Byte value4, LocalDateTime value5, LocalDateTime value6, BigDecimal value7, Integer value8, BigDecimal value9, Byte value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BerthOrderRecord
     */
    public BerthOrderRecord() {
        super(BerthOrder.BERTH_ORDER);
    }

    /**
     * Create a detached, initialised BerthOrderRecord
     */
    public BerthOrderRecord(Integer id, Integer berthId, LocalDateTime startAt, Byte status, LocalDateTime endAt, LocalDateTime createdAt, BigDecimal fee, Integer userId, BigDecimal practicalFee, Byte accountsType, LocalDateTime leaveAt) {
        super(BerthOrder.BERTH_ORDER);

        set(0, id);
        set(1, berthId);
        set(2, startAt);
        set(3, status);
        set(4, endAt);
        set(5, createdAt);
        set(6, fee);
        set(7, userId);
        set(8, practicalFee);
        set(9, accountsType);
        set(10, leaveAt);
    }
}
